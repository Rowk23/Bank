name: dockercompose10254022524024774398
services:
  bank:
    build:
      context: C:\Facultate\An 3\Semestrul 2\II Proj\bank\backend
      dockerfile: bank/Dockerfile
    container_name: bank-back
    depends_on:
      bankdb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      DB_HOST: bankdb
      DB_NAME: bank
      DB_SA_PASSWORD: Password@12345#
    image: bank
    networks:
      main: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\dariu\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\dariu\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\dariu\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\dariu\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  bankdb:
    container_name: app-db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Password@12345#
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      main: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
networks:
  main:
    name: dockercompose10254022524024774398_main